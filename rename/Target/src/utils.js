import{readdir as n}from"node:fs/promises";import{resolve as p}from"node:path";import c from"postcss-rename";import i from"postcss-variable-compress";const R="./.class-maps",C=s=>`(:^|[^&<;:_/[\\]a-zA-Z0-9_.-])(${s})(?=$|[^&;:_/[\\]a-zA-Z0-9_.-])`,P=s=>s.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),_=(s,t)=>100-t/s*100|0;async function*a(s){const t=await n(s,{withFileTypes:!0});for(const o of t){const e=p(s,o.name);o.isDirectory()?yield*a(e):yield e}}const m=async(s,t)=>{let o;if(!(typeof t==="object"&&t!==null)){const{default:e}=await import("postcss-load-config"),r=typeof t==="string"?t:s;try{o=await e({},r)}catch{o=null}}return o},x=async(s,t)=>{const o=await m(t.root,t.css?.postcss),e=o?.options??{},r=o?.plugins?.slice()??[];return r.push(c(s)),r.push(i()),{css:{postcss:{options:e,plugins:r}}}};export{R as MAPS_DIRECTORY,_ as calculatePercent,P as escapeRegExp,m as getPostCssConfig,x as getViteConfiguration,C as matchClasses,a as walkFiles};
