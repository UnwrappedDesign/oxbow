---
// Fudnations
import Text from "@/components/fundations/typography/Text.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import Button from "@/components/fundations/buttons/Button.astro";
import MainHero from "@/components/fundations/containers/MainHero.astro";
// Sections
import Reviews from "@/components/landing/Reviews.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Included from "@/components/pricing/Included.astro";
import PaymentBrands from "@/components/pricing/PaymentBrands.astro";
const tiers = [
  {
    id: "teams",
    title: "Teams",
    price: "$499",
    subtitle: "One time",
    subtitleNote: "USD + Applicable local taxes",
    description: "For teams that actually ship stuff.",
    features: [
      "5 Users ",
      "Lifetime access",
      "Unlimited projects ",
      "400+ components ",
      "Marketing, app & eCom",
      "Discord support – yess",
    ],
    href: import.meta.env.PRODUCT_TEAM_LICENSE_URL,
    btnText: "Buy for $499",
    btnVariant: "alternative",
    accentText: "text-gray-900",
    cardClass: "bg-white",
  },
  {
    id: "personal",
    title: "Personal",
    price: "$99",
    subtitle: "One time",
    subtitleNote: "USD + Applicable local taxes",
    description: "For solo devs and client wranglers.",
    features: [
      "1 User ",
      "Lifetime access",
      "Unlimited projects",
      "400+ components ",
      "Marketing, app & eCom ",
      "Discord support",
    ],
    href: import.meta.env.PRODUCT_INDIVIDUAL_LICENSE_URL,
    btnText: "Buy for $99",
    btnVariant: "accent",
    accentText: "text-blue-500",
    cardClass: "bg-white shadow-oxbow order-first md:order-none",
  },
  {
    id: "guest",
    title: "Guest",
    price: "Free",
    subtitle: "Just vibes",
    subtitleNote: " No credit card required",
    description: "For browsing, testing, and curiosity.",
    features: ["30+ components", "Marketing, app & eCom"],
    href: "/components",
    btnText: "Get started",
    btnVariant: "alternative",
    accentText: "text-gray-900",
    cardClass: "bg-white",
  },
];

// Build Product + AggregateOffer JSON-LD for Pricing
const siteUrl = (Astro.site && Astro.site.toString()) || "https://oxbowui.com";
const canonical = new URL(Astro.url.pathname, Astro.site ?? siteUrl).toString();
const logo = new URL("/favicons/apple-touch-icon.png", siteUrl).toString();
const image = new URL("/images/OpenGraph/twitter.png", siteUrl).toString();

function toPriceNumber(p: string) {
  const n = (p || "").replace(/[^0-9.]/g, "");
  return n || "0";
}

const offerList = tiers.map((t) => {
  const price = toPriceNumber(t.price);
  const isFree = /^free$/i.test(t.price);
  const usersFeature = (t.features || []).find((f: string) =>
    /users?/i.test(f)
  );
  const qty = usersFeature
    ? parseInt(usersFeature.replace(/[^0-9]/g, "")) || 1
    : t.id === "personal"
      ? 1
      : undefined;
  return {
    "@type": "Offer",
    name: t.title,
    description: t.description,
    price: isFree ? "0" : price,
    priceCurrency: "USD",
    availability: "https://schema.org/InStock",
    url: t.href
      ? String(t.href).startsWith("http")
        ? t.href
        : new URL(String(t.href), siteUrl).toString()
      : canonical + "#" + t.id,
    ...(qty
      ? {
          eligibleQuantity: {
            "@type": "QuantitativeValue",
            value: qty,
            unitText: qty > 1 ? "Users" : "User",
          },
        }
      : {}),
  };
});

const pricedOffers = offerList.filter((o: any) => o.price !== "0");
const prices = pricedOffers
  .map((o: any) => parseFloat(o.price))
  .sort((a: number, b: number) => a - b);

const pricingStructuredData = {
  "@context": "https://schema.org",
  "@type": "Product",
  name: "Oxbow UI — Full Access",
  description:
    "Production-ready Tailwind CSS UI components and layouts. One-time purchase, lifetime access. Personal and Teams licenses available.",
  url: canonical,
  image: [image],
  brand: {
    "@type": "Brand",
    name: "Oxbow UI",
    logo: { "@type": "ImageObject", url: logo },
  },
  sku: "oxbow-ui-full-access",
  mpn: "OXBOW-UI-FA",
  publisher: {
    "@type": "Organization",
    name: "Oxbow UI",
    url: siteUrl,
    logo: { "@type": "ImageObject", url: logo },
  },
  offers: {
    "@type": "AggregateOffer",
    lowPrice: prices.length ? String(prices[0]) : "0",
    highPrice: prices.length ? String(prices[prices.length - 1]) : "0",
    priceCurrency: "USD",
    offerCount: String(offerList.length),
    offers: offerList,
  },
};
---

<BaseLayout
  title="Pricing - Oxbow UI"
  description="Pay once, get lifetime access to Oxbow UI components. Personal and Teams licenses — no subscriptions."
  structuredData={pricingStructuredData}
>
  <MainHero
    textCentered
    showAlpineTailwind={false}
    title="Pay once. Own it forever."
    additionalText="No subscriptions, no nonsense."
    additionalTextClasses="mt-2 text-gray-500 font-medium italic text-sm"
  />

  <section class="border-t border-gray-200">
    <Wrapper variant="standard" class="lg:border-x lg:border-gray-200">
      <div class="grid grid-cols-1 gap-2 md:grid-cols-2 lg:grid-cols-3">
        {
          tiers.map((tier) => (
            <article
              class={`relative flex flex-col justify-between h-full p-6 sm:p-4 sm:pb-5 lg:p-6 overflow-hidden rounded-xl ${tier.cardClass}`}
            >
              <div class="flex flex-col justify-start h-full ">
                <div class="flex flex-col gap-2">
                  <div>
                    <Text
                      tag="h3"
                      variant="textSM"
                      class={`font-medium ${tier.accentText}  `}
                    >
                      {tier.title}
                    </Text>
                    <Text tag="p" variant="textSM" class="mt-1  text-gray-500">
                      {tier.description}
                    </Text>
                  </div>
                  <div class="flex items-center mt-2 gap-x-4">
                    <p class="text-4xl font-medium uppercase  sm:text-3xl md:text-4xl upperase text-black">
                      {tier.price}
                    </p>
                    <div>
                      {tier.subtitle && (
                        <p class="text-xs font-medium text-black">
                          {tier.subtitle}
                        </p>
                      )}
                      {tier.subtitleNote && (
                        <p class="text-xs  text-gray-500">
                          {tier.subtitleNote}
                        </p>
                      )}
                    </div>
                  </div>
                </div>
                <div class="pt-8 mt-8 border-t border-gray-100">
                  <Text tag="p" variant="textSM" class="font-medium text-black">
                    Everything included:
                  </Text>
                  <ul
                    role="list"
                    class="flex flex-col mt-2 text-sm gap-y-2  text-gray-500"
                  >
                    {tier.features.map((f) => (
                      <li class="flex items-center gap-1">
                        <svg
                          width="15"
                          height="15"
                          viewBox="0 0 15 15"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                          class={`size-4 shrink-0 ${tier.accentText}`}
                        >
                          <path
                            d="M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z"
                            fill="currentColor"
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                          />
                        </svg>
                        {f}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
              <div class="w-full mt-8">
                <Button
                  id={`purchase-${tier.id}-license`}
                  data-umami-event={`purchase-${tier.id}-license`}
                  href={tier.href}
                  size="sm"
                  variant={
                    tier.btnVariant as
                      | "default"
                      | "accent"
                      | "alternative"
                      | "alternative"
                      | "link"
                      | "outline"
                      | "ghost"
                  }
                  class="w-full"
                >
                  {tier.btnText}
                </Button>
              </div>
            </article>
          ))
        }
      </div>
      <PaymentBrands />
    </Wrapper>
  </section>
  <Included />
  <Reviews />
</BaseLayout>
