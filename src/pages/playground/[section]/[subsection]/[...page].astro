---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Playground from "@/components/global/Playground.astro";
import { paginate } from "@/utils/pagination";

const PAGE_SIZE = 10;
const { section, subsection, page } = Astro.params;
const components = await Astro.glob(`@/components/oxbow/**/*.astro`);

const sectionComponents = components.filter((component) => {
  const sectionRegex = new RegExp(`${section}\/${subsection}\/.+\.astro$`, "i");
  return component.file?.match(sectionRegex);
});

const currentPage = parseInt(page ?? "1", 10) || 1;
const paginationData = paginate(
  `/playground/${section}/${subsection}`,
  sectionComponents,
  currentPage,
  PAGE_SIZE
);
---

<BaseLayout>
  <section>
    <div class="max-w-5xl 2xl:max-w-[100rem] mx-auto px-8 pt-12 lg:pt-32">
      <div class="prose-styles uppercase !text-xs ">
        <span>
          <a href="/"> Home</a>  / Page {paginationData.currentPage}</span
        >
        —
        <span>
          {
            paginationData.url.prev ? (
              <a

                href={paginationData.url.prev}>
                Previous
              </a>
            ) : null
          }
          ·
          {
            paginationData.url.next ? (
              <a

                href={paginationData.url.next}>
                Next
              </a>
            ) : null
          }
        </span>
        <h1
          class="text-4xl capitalize mt-4 font-semibold tracking-tight sm:text-4xl [@media(max-width:480px)]:text-[2rem] text-base-900 not-prose">
          {subsection.replace(/-/g, " ")}
        </h1>
      </div>
    </div>
    <div class="maxc-w-screen 2xl:max-w-[100rem] mx-auto px-8">
      <div class="pb-32 mt-12 space-y-12">
        {
          paginationData.data.map((component, index) => (
            <Playground
              componentIndex={(currentPage - 1) * PAGE_SIZE + index + 1}
              componentPath={component.file.replace(/.*\/src/, "src")}
              playgroundRef={`${section}-${subsection}-${currentPage}-component-${index}`}>
              <component.default />
            </Playground>
          ))
        }
        <div class="flex items-center justify-between w-full">
          {
            paginationData.url.prev ? (
              <a
                class="items-center px-4 py-1 text-sm text-base-900 transition border rounded-full focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50"
                href={paginationData.url.prev}>
                Previous
              </a>
            ) : null
          }
          {
            paginationData.url.next ? (
              <a
                class="items-center px-4 py-1 ml-auto text-sm text-base-900 transition border rounded-full focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50"
                href={paginationData.url.next}>
                Next
              </a>
            ) : null
          }
        </div>
      </div>
    </div>
  </section>
  <script>
    function resizeIFramesToFitContent() {
      const iframes = document.querySelectorAll("iframe");

      iframes.forEach((iframe) => {
        try {
          iframe.height =
            iframe.contentWindow?.document.body.scrollHeight + "px";
        } catch (e) {}
      });

      requestAnimationFrame(resizeIFramesToFitContent);
    }

    addEventListener(
      "load",
      requestAnimationFrame.bind(this, resizeIFramesToFitContent)
    );
  </script>
</BaseLayout>
