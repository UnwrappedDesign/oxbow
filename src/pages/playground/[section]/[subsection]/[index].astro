---
import type { ImageMetadata } from "astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Playground from "@/components/global/Playground.astro";

const { section, subsection, index } = Astro.params;

const components = await Astro.glob(`@/components/oxbow/**/*.astro`);
const sectionComponents = components.filter((component) => {
  const sectionRegex = new RegExp(`${section}\/${subsection}\/.+\.astro$`, "i");
  return component.file?.match(sectionRegex);
});

const component = sectionComponents[parseInt(index) - 1];
---

<BaseLayout>
  <section>
    <div class="max-w-5xl pt-12 lg:pt-32 2xl:max-w-[100rem] mx-auto px-8">
      <h1
        class="text-4xl font-semibold tracking-tight text-black lg:text-balance 2xl:text-6xl"
      >
        {subsection}
        {index}
      </h1>
    </div>
    <div class="max-w-screen 2xl:max-w-[100rem] mx-auto px-8 mt-12">
      <Playground
        componentIndex={parseInt(index)}
        componentPath={component.file.replace(/.*\/src/, "src")}
        playgroundRef={`${section}-${subsection}-${index}`}
      >
        <component.default />
      </Playground>
    </div>
  </section>
</BaseLayout>
<script>
  function resizeIFramesToFitContent() {
    const iframes = document.querySelectorAll("iframe");
    iframes.forEach((iframe) => {
      try {
        iframe.height = iframe.contentWindow?.document.body.scrollHeight + "px";
      } catch (e) {}
    });
    requestAnimationFrame(resizeIFramesToFitContent);
  }
  addEventListener(
    "load",
    requestAnimationFrame.bind(this, resizeIFramesToFitContent),
  );
</script>
