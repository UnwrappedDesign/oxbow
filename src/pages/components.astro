---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/fundations/typography/Text.astro";
import EntryStructure from "@/components/landing/EntryStructure.astro";
import StickyNav from "@/components/global/StickyNav.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
//
//
// Marketing
import { pageSections } from "@/data/entries.json";
import { pageExamples } from "@/data/entries.json";
//
//
// Application
import { forms, elements, overlay, navigation } from "@/data/entries.json";

//
//
// Ecommerce
import { storeSections } from "@/data/entries.json";

// Data
const groupedEntries = [
  {
    id: "marketing",
    title: "Marketing",
    description:
      "Landing pages, pricing, features, footers — all the stuff that makes marketing sites look like you know what you're doing.",
    groups: [
      { id: "pageSections", label: "Page sections", data: pageSections },
      { id: "pageExamples", label: "Landing Pages", data: pageExamples },
    ],
  },
  {
    id: "application",
    title: "Application",
    description:
      "Navs, buttons, forms, layouts — all the UI bits your app needs to look like it wasn’t thrown together last night.",
    groups: [
      { id: "navigation", label: "Navigation", data: navigation },
      { id: "overlay", label: "Overlay", data: overlay },
      { id: "forms", label: "Forms", data: forms },
      { id: "elements", label: "Elements", data: elements },
    ],
  },
  {
    id: "ecommerce",
    title: "eCommerce",
    description:
      "Carts, checkouts, promos, product pages — everything you need to make your store look open for business (and not like a side project).",
    groups: [{ id: "storeSections", label: "Pages", data: storeSections }],
  },
];
---

<BaseLayout
  title="Components - Oxbow UI"
  description="Browse all Oxbow UI components, elements, and layouts for marketing, application, and ecommerce UIs."
  image="/images/OpenGraph/twitter.png"
>
  <StickyNav />

  <section class="divide-y divide-base-200">
    {
      groupedEntries.map(({ id, title, description, groups }) => (
        <section id={id}>
          <Wrapper
            variant="standard"
            class="border-x lg:border-x lg:border-base-200"
          >
            <section class="flex flex-col scroll-mt-24">
              <div>
                <div class="py-8 pb-5 grid grid-cols-1 lg:grid-cols-4 gap-4">
                  <Text
                    tag="h3"
                    variant="textbase"
                    class="font-medium text-base-900"
                  >
                    {title}
                  </Text>
                  <Text
                    tag="p"
                    variant="textBase"
                    class=" text-base-500 lg:col-span-3"
                  >
                    {description}
                  </Text>
                </div>
                <div class="flex flex-col mt-8 gap-12">
                  {groups.map(({ id: groupId, label, data }) => (
                    <div class="flex flex-col gap-8 scroll-mt-24" id={groupId}>
                      <Text
                        variant="textBase"
                        class="font-medium text-base-500"
                      >
                        {label}
                      </Text>
                      <EntryStructure entries={data} />
                    </div>
                  ))}
                </div>
              </div>
            </section>
          </Wrapper>
        </section>
      ))
    }
  </section>
</BaseLayout>
