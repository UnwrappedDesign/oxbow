---
// How to use:
//
// This <SectionDivider /> component should be placed inside a container
// that has `relative` positioning and `overflow-hidden`, such as a <div>
// Best use is to separate sections
//
//<Example:
//
// <div class="relative overflow-hidden">
//   <SectionDivider /> Renders at the top by default
//   <SectionDivider flipped={true} />  Renders at the bottom (rotated)
//   <div class="relative">...</div>
// </div>
//
const { flipped = false } = Astro.props;
const position = flipped ? "top-0 rotate-180" : "bottom-0";
---

<div
  class={`absolute inset-x-0 ${position} mt-[calc(-3/16*1rem)] flex items-end`}
>
  <div
    class="mr-[calc(-1*(theme(spacing.8)-theme(spacing[1.5])))] h-11 flex-auto bg-white"
  >
  </div>
  <div
    class="flex justify-between mx-auto w-full px-6 sm:max-w-[40rem] md:max-w-[48rem] md:px-8 lg:max-w-[64rem] xl:max-w-[70rem]"
  >
    <svg
      viewBox="0 0 56 48"
      aria-hidden="true"
      class="-ml-1.5 mb-[calc(-1/16*1rem)] w-14 flex-none overflow-visible fill-white"
    >
      <path
        d="M 2.686 3 H -4 V 48 H 56 V 47 H 53.314 A 8 8 0 0 1 47.657 44.657 L 8.343 5.343 A 8 8 0 0 0 2.686 3 Z"
      ></path>
    </svg>
    <svg
      viewBox="0 0 56 48"
      aria-hidden="true"
      class="-mr-1.5 mb-[calc(-1/16*1rem)] w-14 flex-none overflow-visible fill-white"
    >
      <path
        d="M 53.314 3 H 60 V 48 H 0 V 47 H 2.686 A 8 8 0 0 0 8.343 44.657 L 47.657 5.343 A 8 8 0 0 1 53.314 3 Z"
      ></path>
    </svg>
  </div>
  <div
    class="ml-[calc(-1*(theme(spacing.8)-theme(spacing[1.5])))] h-11 flex-auto bg-white"
  >
  </div>
</div>
