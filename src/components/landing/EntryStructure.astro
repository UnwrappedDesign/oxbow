---
import { Image } from "astro:assets";
import type { Template } from "@/data/entries.json";
interface Props {
  entries: Template[];
}
const { entries } = Astro.props; // Make sure entries is correctly passed and used
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/images/**/*.{jpeg,jpg,png,gif}"
);
const components = await Astro.glob("@/components/oxbow/**/*.astro");
const componentBySection = components.reduce((acc, component) => {
  const [section, subsection] = component.file
    .replace(/.*\/src\/components\/oxbow\//, "")
    .split("/");
  const path = ["/playground", section, subsection].filter(Boolean).join("/");
  return {
    ...acc,
    [path]: acc[path] ? acc[path] + 1 : 1,
  };
}, {});
// Add quantity to each entry
const entriesWithQuantity = entries
  .map((entry: Template) => {
    const imagePath = `/src/images/${entry.image}`;
    if (!images[imagePath])
      throw new Error(
        `"${imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
      );
    return {
      ...entry,
      image: images[imagePath],
      quantity: componentBySection[entry.link] || 0,
    };
  })
  // Filter out entries with quantity 0
  .filter((entry) => entry.quantity > 0);
---

<ul
  class="col-span-3 grid grid-cols-1 gap-x-6 gap-y-6 sm:grid-cols-2 sm:gap-y-10 md:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-4 xl:gap-x-8">
  {
    entriesWithQuantity.map((template) => (
      <li class="relative ">
        <div class="group relative group rounded-lg ">
          <Image
            class="object-bottom  object-cove    rounded-lg ring-4 ring-base-50 hover:ring-base-100 border border-base-200 duration-300"
            alt={template.name}
            src={template.image()}
          />
          <div>
            <h4 class="mt-4 text-sm 2xl:text-base font-medium text-base-900 group-hover:text-accent-600">
              <a
                class="flex justify-between gap-2 items-center"
                title={template.name}
                href={template.link}>
                <span class="absolute -inset-2.5 z-10" />
                <span class="relative">{template.name}</span>
                <span class="inline-flex  items-center font-medium z-10 text-accent-500 sr-only bottom-2 right-2 bg-base-50 px-2.5 py-1 text-xs rounded-md">
                  New
                </span>
              </a>
            </h4>
            <p class="relative mt-1.5 text-xs 2xl:text-sm font-medium text-base-400">
              {template.quantity} components
            </p>
          </div>
        </div>
      </li>
    ))
  }
</ul>
