---
import Text from "@/components/fundations/typography/Text.astro";
import X from "@/components/fundations/icons/X.astro";
import IconButton from "@/components/fundations/buttons/IconButton.astro";
import ChevronRight from "@/components/fundations/icons/ChevronRight.astro";
import ChevronLeft from "@/components/fundations/icons/ChevronLeft.astro";
import g1 from "@/images/gallery/1.png";
import g2 from "@/images/gallery/2.png";
import g3 from "@/images/gallery/3.png";
import g4 from "@/images/gallery/4.png";
import g5 from "@/images/gallery/5.png";
import g6 from "@/images/gallery/6.png";
import g7 from "@/images/gallery/7.png";
import g8 from "@/images/gallery/8.png";
const gallery = [
  { src: g1.src, alt: "Oxbow UI" },
  { src: g2.src, alt: "Oxbow UI" },
  { src: g3.src, alt: "Oxbow UI" },
  { src: g4.src, alt: "Oxbow UI" },
  { src: g5.src, alt: "Oxbow UI" },
  { src: g6.src, alt: "Oxbow UI" },
  { src: g7.src, alt: "Oxbow UI" },
  { src: g8.src, alt: "Oxbow UI" },
];
---

<!---
// Set  `isOpen` to `false` to hide the lightbox. 
// isOpen: true,
-->
<section
  class="bg-white dark:bg-zinc-900"
  x-data={`{
    gallery: ${JSON.stringify(gallery)},
    currentIndex: 0,
    isOpen: true,
    openLightbox(index) { this.currentIndex = index; this.isOpen = true; },
    closeLightbox() { this.isOpen = false; },
    next() { this.currentIndex = (this.currentIndex + 1) % this.gallery.length; },
    prev() { this.currentIndex = (this.currentIndex - 1 + this.gallery.length) % this.gallery.length; }
  }`}
>
  <div class="px-8 py-24 mx-auto max-w-7xl md:px-12 lg:px-20">
    <Text
      variant="textSM"
      tag="p"
      class="pb-12 mt-4 italic text-center text-zinc-500 dark:text-zinc-400"
    >
      Click on the image to open it in a lightbox.
    </Text>
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 lg:grid-cols-4">
      {
        gallery.map(({ src, alt }, index) => (
          <img
            src={src}
            alt={alt}
            class="object-cover cursor-pointer size-full aspect-square hover:opacity-80 transition-opacity"
            @click={`openLightbox(${index})`}
          />
        ))
      }
    </div>
  </div>

  <!-- Lightbox -->
  <div
    x-show="isOpen"
    x-init="$el.focus()"
    tabindex="0"
    role="dialog"
    aria-modal="true"
    aria-label="Image Gallery"
    @keydown.escape="closeLightbox"
    @keydown.arrow-left="prev"
    @keydown.arrow-right="next"
    class="fixed inset-0 bg-white/80 dark:bg-zinc-900/80 backdrop-blur supports-[backdrop-filter]:bg-white/60 supports-[backdrop-filter]:dark:bg-zinc-900/60 flex items-start justify-center z-50 overflow-auto p-8 md:p-12 lg:p-32 outline-none"
    @click="closeLightbox"
    x-transition
  >
    <div class="relative w-full p-4" @click.stop>
      <img
        :src="gallery[currentIndex].src"
        :alt="gallery[currentIndex].alt"
        class="object-cover object-top mx-auto lg:max-w-xl h-100 aspect-top"
      />

      <!-- Thumbnails -->
      <div class="flex justify-center py-2 mt-4 overflow-x-auto space-x-2">
        <template x-for="(item, index) in gallery" :key="index">
          <img
            :src="item.src"
            :alt="item.alt"
            class="flex-shrink-0 object-cover object-top cursor-pointer size-16 outline aspect-square"
            :class="index === currentIndex ? 'outline-zinc-500' : 'outline-zinc-300 hover:outline-zinc-500'"
            @click="currentIndex = index"
          />
        </template>
      </div>

      <button
        class="absolute z-50 top-2 right-2"
        aria-label="Close gallery"
        @click.stop="closeLightbox"
      >
        <X
          slot="icon"
          size="sm"
          class="text-black dark:text-white hover:text-zinc-300"
        />
      </button>
      <div class="flex items-center justify-between mt-2 gap-2">
        <IconButton
          variant="default"
          size="sm"
          class="lg:absolute lg:left-2 lg:top-1/2 lg:transform lg:-translate-y-1/2 lg:z-50"
          @click.stop="prev"
        >
          <ChevronLeft slot="icon" size="xl" />
        </IconButton>
        <IconButton
          variant="default"
          size="sm"
          class="lg:absolute lg:right-2 lg:top-1/2 lg:transform lg:-translate-y-1/2 lg:z-50"
          @click.stop="next"
        >
          <ChevronRight slot="icon" size="xl" />
        </IconButton>
      </div>
    </div>
  </div>
</section>
