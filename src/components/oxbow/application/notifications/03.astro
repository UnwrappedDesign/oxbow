---
export const freeComponent = true;
// Transition utilities referenced by x-transition
export const excludeFromObfuscation = [
  "translate-y-2",
  "translate-y-0",
  "opacity-0",
  "opacity-100",
];
import Refresh from "@/components/fundations/icons/Refresh.astro";
import Check from "@/components/fundations/icons/Check.astro";
import X from "@/components/fundations/icons/X.astro";
import Button from "@/components/fundations/buttons/Button.astro";
import IconButton from "@/components/fundations/buttons/IconButton.astro";
import Text from "@/components/fundations/typography/Text.astro";
---

<div
  class="flex items-center justify-center p-8 py-40 bg-white lg:py-56 dark:bg-zinc-900"
>
  <!-- Copy Start -->
  <!-- 
// Make sure to change  "open: false",  to  open: true. On the z-data="{}".
//
//Programmatic usage:
//
// window.dispatchEvent(new CustomEvent('notify', {
//  detail: { type:'success', title:'Saved', message:'All good', timeout: 4000 }
// }))
-->
  <div
    class="w-full max-w-xl mx-auto"
    x-data="{
      toast: { open:true, name:'design_assets.zip', size:'42 MB', progress:0, state:'idle', // idle | uploading | paused | done | error
        timer:null, link:'#' },
      show(detail={}){
        // initialize
        this.reset();
        this.toast.name = detail.name || this.toast.name;
        this.toast.size = detail.size || this.toast.size;
        this.toast.link = detail.link || this.toast.link;
        this.toast.open = true; this.toast.state='uploading';
        this.tick();
      },
      tick(){
        if (this.toast.timer) clearInterval(this.toast.timer);
        this.toast.timer = setInterval(()=>{
          if (this.toast.state!=='uploading') return;
          const step = Math.max(1, Math.round(5 + Math.random()*10));
          this.toast.progress = Math.min(100, this.toast.progress + step);
          if (this.toast.progress >= 100){ this.finish(); }
        }, 500);
      },
      pause(){ if(this.toast.state==='uploading'){ this.toast.state='paused'; } },
      resume(){ if(this.toast.state==='paused'){ this.toast.state='uploading'; this.tick(); } },
      cancel(){ this.reset(); this.toast.open=false; },
      finish(){ this.toast.state='done'; if(this.toast.timer) { clearInterval(this.toast.timer); this.toast.timer=null; } },
      reset(){ if(this.toast.timer){ clearInterval(this.toast.timer); } this.toast.timer=null; this.toast.progress=0; this.toast.state='idle'; },
    }"
    x-init="window.addEventListener('notify-upload', (e)=> show(e.detail||{}))"
  >
    <!-- Demo trigger -->
    <div class="flex items-center justify-center gap-2">
      <Button
        variant="default"
        size="sm"
        @click="show({ name:'screenshots.tar.gz', size:'128 MB', link:'#' })"
        >Click to simulate upload</Button
      >
    </div>

    <!-- Live region (bottom-center, same as 02) -->
    <div
      aria-live="polite"
      class="pointer-events-none fixed inset-x-0 bottom-0 flex justify-center px-4 pb-6 sm:px-6"
    >
      <div class="flex w-full max-w-lg justify-center">
        <div
          x-show="toast.open"
          x-transition:enter="transform ease-out duration-300"
          x-transition:enter-start="translate-y-2 opacity-0"
          x-transition:enter-end="translate-y-0 opacity-100"
          x-transition:leave="transition ease-in duration-150"
          x-transition:leave-start="opacity-100"
          x-transition:leave-end="opacity-0"
          class="pointer-events-auto w-full rounded-xl bg-white shadow-lg outline outline-1 outline-black/5 transition dark:bg-zinc-800 dark:-outline-offset-1 dark:outline-white/10"
          role="status"
        >
          <div class="p-4">
            <template x-if="toast.state!=='done'">
              <div class="flex items-start gap-3">
                <div class="shrink-0 text-blue-600 dark:text-blue-400">
                  <Refresh size="base" />
                </div>
                <div class="flex-1 min-w-0">
                  <Text
                    variant="sm"
                    tag="p"
                    class="font-medium text-zinc-900 dark:text-white"
                  >
                    Uploading…
                  </Text>
                  <p class="mt-1 text-xs text-zinc-600 dark:text-zinc-300">
                    <span x-text="toast.name"></span> · <span
                      x-text="toast.size"></span>
                  </p>
                  <!-- progress bar -->
                  <div
                    class="mt-2 h-2 w-full rounded-full bg-zinc-100 dark:bg-zinc-700 overflow-hidden"
                  >
                    <div
                      class="h-2 rounded-full bg-blue-600 dark:bg-blue-400"
                      :style="`width:${toast.progress}%`"
                    >
                    </div>
                  </div>
                  <div class="mt-2 flex items-center gap-2">
                    <Button
                      size="xxs"
                      variant="muted"
                      type="button"
                      @click="pause()"
                      x-show="toast.state==='uploading'">Pause</Button
                    >
                    <Button
                      size="xxs"
                      variant="muted"
                      type="button"
                      @click="resume()"
                      x-show="toast.state==='paused'">Resume</Button
                    >
                    <Button
                      size="xxs"
                      variant="outline"
                      type="button"
                      @click="cancel()">Cancel</Button
                    >
                    <span
                      class="ml-auto text-[0.70rem] text-zinc-500 dark:text-zinc-400"
                      x-text="toast.progress + '%'"
                    >
                    </span>
                  </div>
                </div>
                <div class="ml-2 flex shrink-0">
                  <IconButton
                    variant="muted"
                    size="xxs"
                    type="button"
                    @click="cancel()"
                  >
                    <span class="sr-only">Close</span>
                    <X size="sm" />
                  </IconButton>
                </div>
              </div>
            </template>

            <template x-if="toast.state==='done'">
              <div class="flex items-start gap-3">
                <div class="shrink-0 text-emerald-600 dark:text-emerald-400">
                  <Check size="base" />
                </div>
                <div class="flex-1 min-w-0">
                  <p class="text-sm font-medium text-zinc-900 dark:text-white">
                    Upload complete
                  </p>
                  <p class="mt-1 text-xs text-zinc-600 dark:text-zinc-300">
                    <span x-text="toast.name"></span> · <span
                      x-text="toast.size"></span>
                  </p>
                  <div class="mt-2 flex items-center gap-2">
                    <Button size="xxs" variant="muted" :href="toast.link"
                      >Open</Button
                    >
                    <Button
                      variant="outline"
                      size="xxs"
                      type="button"
                      @click="toast.open=false">Dismiss</Button
                    >
                  </div>
                </div>
                <div class="ml-2 flex shrink-0">
                  <button
                    type="button"
                    class="inline-flex rounded-md text-zinc-400 hover:text-zinc-500 focus:outline-2 focus:outline-offset-2 focus:outline-blue-600 dark:hover:text-white dark:focus:outline-blue-500"
                    @click="toast.open=false"
                  >
                    <span class="sr-only">Close</span>
                    <X size="base" />
                  </button>
                </div>
              </div>
            </template>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Programmatic usage:
window.dispatchEvent(new CustomEvent('notify-upload', {
  detail: { name: 'archive.zip', size: '80 MB', link: '/files/archive.zip' }
}))
-->
