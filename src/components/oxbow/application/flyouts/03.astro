---
import Button from "@/components/fundations/buttons/Button.astro";
import Text from "@/components/fundations/typography/Text.astro";
import FlyoutLinkBox from "@/components/fundations/wrappers/FlyoutLinkBox.astro";
import ChevronDown from "@/components/fundations/icons/ChevronDown.astro";
import Refresh from "@/components/fundations/icons/Refresh.astro";
import FileDots from "@/components/fundations/icons/FileDots.astro";
import Edit from "@/components/fundations/icons/Edit.astro";
import Brain from "@/components/fundations/icons/Brain.astro";
import Subtask from "@/components/fundations/icons/Subtask.astro";

const links = [
  { name: "Formatted text and markdown", link: "#" },
  { name: "Themes for your documentation", link: "#" },
  { name: "Convert and export to PDF", link: "#" },
  { name: "Samsung pen support", link: "#" },
  { name: "Flowcharts and diagrams", link: "#" },
  { name: "Quick translations", link: "#" },
  { name: "HQ editing tools", link: "#" },
  { name: "Real-time collaboration", link: "#" },
  { name: "Customizable templates", link: "#" },
  { name: "Version control", link: "#" },
];
---

<div class="flex items-center justify-center w-full p-8 mx-auto">
  <!-- copy:start -->
  <div
    class="relative"
    x-data="{
      uid: Math.random().toString(36).slice(2),
      open: false,
      style: '',
      gap: 8,
      align() {
        const r = this.$refs.btn.getBoundingClientRect();
        const left = r.left + r.width / 2;   // center under button
        const top  = r.bottom + this.gap;    // just below
        this.style = `position:fixed; left:${left}px; top:${top}px; transform:translateX(-50%);`;
      },
      toggle() {
        if (this.open) { this.open = false; return; }
        window.dispatchEvent(new CustomEvent('close-all-flyouts', { detail: this.uid }));
        this.align();
        requestAnimationFrame(() => { this.open = true; });
      },
      close() { this.open = false; }
    }"
    x-init="
      // Close when another flyout opens
      window.addEventListener('close-all-flyouts', (e) => { if (e.detail !== uid) open = false });
      // Keep position synced while open
      const realign = () => { if (open) align() };
      window.addEventListener('resize', realign);
      window.addEventListener('scroll', realign, { passive: true });
    "
  >
    <Button
      x-ref="btn"
      aria-expanded="false"
      @click.stop="toggle"
      variant="text"
      size="sm"
      gap="sm"
    >
      <span>Button</span>
      <ChevronDown size="sm" slot="right-icon" />
    </Button>

    <!-- Backdrop for click-outside -->
    <div
      x-show="open"
      x-transition.opacity
      class="fixed inset-0 z-[999]"
      @click="close"
      style="display:none"
    >
    </div>

    <!-- Teleported flyout (prevents clipping in cards/overflow containers) -->
    <template x-teleport="body">
      <div
        x-show="open"
        :style="style"
        class="z-[1000]"
        style="display:none"
        @keydown.escape.window="close"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 translate-y-1"
        x-transition:enter-end="opacity-100 translate-y-0"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 translate-y-0"
        x-transition:leave-end="opacity-0 translate-y-1"
      >
        <div
          class="flex-auto w-screen max-w-md overflow-hidden bg-white shadow-lg rounded-3xl ring-1 ring-zinc-900/5 lg:max-w-3xl"
        >
          <div class="p-8 grid grid-cols-1 gap-x-0 gap-y-1 lg:grid-cols-2">
            <div class="p-4" role="none">
              <Text
                tag="h3"
                variant="textBase"
                class="font-medium text-zinc-900">Benefits</Text
              >
              <div class="mt-2">
                <FlyoutLinkBox
                  href="#_"
                  icon={Refresh}
                  title="Sync across devices"
                  description="Enable syncing across devices"
                />
                <FlyoutLinkBox
                  href="#_"
                  icon={FileDots}
                  title="Create custom documents"
                  description="Stlye your documents with ease"
                />
                <FlyoutLinkBox
                  href="#_"
                  icon={Edit}
                  title=" Edit your files"
                  description="Endless possibilities"
                />
                <FlyoutLinkBox
                  href="#_"
                  icon={Brain}
                  title="Organize files"
                  description="Keep them all in one place"
                />
                <FlyoutLinkBox
                  href="#_"
                  icon={Subtask}
                  title=" Manage tasks and projects"
                  description="  Make simple tasks a breeze"
                />
              </div>
            </div>

            <div class="p-4">
              <Text
                tag="h3"
                variant="textBase"
                class="font-medium text-zinc-900">Browse by feature</Text
              >
              <div
                class="pt-4 mt-4 border-t border-zinc-200 space-y-2"
                role="none"
              >
                {
                  links.map((feature) => (
                    <Text
                      tag="a"
                      href={feature.link}
                      variant="textBase"
                      class="block font-medium hover:text-stone-500 text-zinc-500"
                    >
                      {feature.name}
                    </Text>
                  ))
                }
              </div>
            </div>
          </div>

          <div class="p-8 pt-0">
            <div
              class="items-end p-8 grid grid-cols-1 md:grid-cols-3 bg-zinc-50 rounded-2xl"
            >
              <div class="md:col-span-2">
                <Text
                  tag="h2"
                  variant="textLG"
                  class="font-semibold text-zinc-900"
                  >Ready to get started?</Text
                >
                <Text
                  tag="p"
                  variant="textBase"
                  class="mt-2 font-medium text-zinc-500 lg:text-balance"
                >
                  Take your markup to the next level with Oxbow
                </Text>
              </div>
              <div class="mt-4 lg:justify-self-end">
                <Button variant="accent" size="sm">Get started</Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </template>
  </div>
  <!-- copy:end -->
</div>
