---
import Button from "@/components/fundations/buttons/Button.astro";
import Text from "@/components/fundations/typography/Text.astro";
import ChevronDown from "@/components/fundations/icons/ChevronDown.astro";
import FlyoutLinkBox from "@/components/fundations/wrappers/FlyoutLinkBox.astro";
import Refresh from "@/components/fundations/icons/Refresh.astro";
import FileDots from "@/components/fundations/icons/FileDots.astro";
import Edit from "@/components/fundations/icons/Edit.astro";
import Brain from "@/components/fundations/icons/Brain.astro";
import LoaderTwo from "@/components/fundations/icons/LoaderTwo.astro";
import Automation from "@/components/fundations/icons/Automation.astro";
import UsersGroup from "@/components/fundations/icons/UsersGroup.astro";
import Clock from "@/components/fundations/icons/Clock.astro";

const links = [
  { name: "Formatted text and markdown", link: "#" },
  { name: "Themes for your documentation", link: "#" },
  { name: "Convert and export to PDF", link: "#" },
  { name: "Samsung pen support", link: "#" },
  { name: "Flowcharts and diagrams", link: "#" },
  { name: "Quick translations", link: "#" },
  { name: "HQ editing tools", link: "#" },
];
---

<div class="flex items-center justify-center w-full p-8 mx-auto">
  <!-- copy:start -->
  <div
    class="relative z-50 isolate"
    x-data="{
      uid: Math.random().toString(36).slice(2),
      open: false,
      style: '',
      gap: 8,
      align() {
        const r = this.$refs.btn.getBoundingClientRect();
        const top = r.bottom + this.gap;       // full-width panel starts just under the button
        this.style = `position:fixed; left:0; right:0; top:${top}px;`;
      },
      toggle() {
        if (this.open) { this.open = false; return; }
        // Close other flyouts on the page
        window.dispatchEvent(new CustomEvent('close-all-flyouts', { detail: this.uid }));
        this.align();                          // set coords first
        requestAnimationFrame(() => this.open = true); // then show (no jitter)
      },
      close() { this.open = false; }
    }"
    x-init="
      // Close when another flyout opens
      window.addEventListener('close-all-flyouts', (e) => { if (e.detail !== uid) open = false });
      // Keep position synced while open
      const realign = () => { if (open) align() };
      window.addEventListener('resize', realign);
      window.addEventListener('scroll', realign, { passive: true });
    "
  >
    <div
      class="flex items-center justify-center px-8 mx-auto max-w-7xl md:px-12 lg:px-24"
    >
      <Button
        x-ref="btn"
        aria-expanded="false"
        @click.stop="toggle"
        variant="text"
        size="sm"
        gap="sm"
      >
        <span>Button</span>
        <ChevronDown size="sm" slot="right-icon" />
      </Button>
    </div>

    <!-- Backdrop (outside click) -->
    <div
      x-show="open"
      x-transition.opacity
      class="fixed inset-0 z-[999]"
      @click="close"
      style="display:none"
    >
    </div>

    <!-- Teleported full-width flyout -->
    <template x-teleport="body">
      <div
        x-show="open"
        :style="style"
        class="z-[1000]"
        style="display:none"
        @keydown.escape.window="close"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 -translate-y-1"
        x-transition:enter-end="opacity-100 translate-y-0"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 translate-y-0"
        x-transition:leave-end="opacity-0 -translate-y-1"
      >
        <!-- Keep your original inner wrapper/layout -->
        <div class="px-8 py-12 md:px-12 lg:px-24">
          <div
            class="p-8 mx-auto mt-12 bg-white shadow-lg max-w-7xl ring-1 ring-zinc-900/5 rounded-3xl lg:p-12"
          >
            <div
              class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-12"
            >
              <div>
                <Text
                  tag="h3"
                  variant="textBase"
                  class="font-medium text-zinc-900">Benefits</Text
                >
                <div class="mt-2">
                  <FlyoutLinkBox
                    href="#_"
                    icon={Refresh}
                    title="Sync across devices"
                    description="Enable syncing across devices"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={FileDots}
                    title="Create custom documents"
                    description="Stlye your documents with ease"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={Edit}
                    title=" Edit your files"
                    description="Endless possibilities"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={Brain}
                    title="Organize files"
                    description="Keep them all in one place"
                  />
                </div>
              </div>

              <div>
                <Text
                  tag="h3"
                  variant="textBase"
                  class="font-medium text-zinc-900">Enhance Productivity</Text
                >
                <div class="mt-2">
                  <FlyoutLinkBox
                    href="#_"
                    icon={LoaderTwo}
                    badge="New"
                    title="  Optimize Processes"
                    description="   Simplify tasks and save time"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={Automation}
                    title="Automate Efforts"
                    description=" Automate repetitive tasks"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={UsersGroup}
                    title="  Seamless Collaboration"
                    description=" Share and work together effortlessly"
                  />
                  <FlyoutLinkBox
                    href="#_"
                    icon={Clock}
                    title=" Track Time"
                    description="Monitor and manage time"
                  />
                </div>
              </div>

              <div>
                <div class="relative">
                  <span
                    class="absolute inset-y-0 left-0 flex items-center pl-3"
                  >
                    <svg
                      class="text-zinc-400 size-5"
                      viewBox="0 0 24 24"
                      fill="none"
                      aria-hidden="true"
                    >
                      <path
                        d="M21 21L15 15M17 10C17 13.866 13.866 17 10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10Z"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"></path>
                    </svg>
                  </span>
                  <input
                    type="text"
                    class="block w-full h-8 px-4 py-2 pl-10 pr-4 text-sm bg-white border border-transparent rounded-lg shadow appearance-none text-blue-700 duration-300 ring-1 ring-zinc-200 placeholder-zinc-400 focus:border-zinc-300 focus:bg-transparent focus:outline-none focus:ring-blue-500 focus:ring-offset-2 focus:ring-2 sm:text-sm"
                    placeholder="Search"
                    aria-label="Search"
                  />
                </div>
                <div
                  class="pt-4 mt-4 border-t border-zinc-200 space-y-2"
                  role="none"
                >
                  {
                    links.map((feature) => (
                      <Text
                        tag="a"
                        href={feature.link}
                        variant="textBase"
                        class="block font-medium hover:text-blue-500 text-zinc-500 "
                      >
                        {feature.name}
                      </Text>
                    ))
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </template>
  </div>
  <!-- copy:end -->
</div>
