---
const { variant, position, size, class: className, ...rest } = Astro.props;

// Accent
const accentClass = [
  "text-blue-600",
  "ring-blue-600",
  "dark:text-blue-200",
  "dark:ring-blue-400",
  "dark:bg-zinc-900",
];
// Alternative
const alternativeAccentClass = [
  "text-zinc-500",
  "ring-zinc-200",
  "dark:text-zinc-200",
  "dark:ring-zinc-700",
  "dark:bg-zinc-900",
];
// Default
const defaultClass = [
  "text-zinc-800",
  "ring-zinc-800",
  "dark:text-zinc-100",
  "dark:ring-zinc-200",
  "dark:bg-zinc-900",
];
// Muted
const mutedClass = [
  "text-zinc-600",
  "ring-zinc-600",
  "dark:text-zinc-300",
  "dark:ring-zinc-700",
  "dark:bg-zinc-900",
];
// Text
const textClass = [
  "text-zinc-500",
  "bg-white",
  "dark:text-zinc-200",
  "dark:bg-zinc-900",
];
// Info
const infoClass = [
  "text-blue-700",
  "ring-blue-700",
  "dark:text-blue-300",
  "dark:ring-blue-400",
  "dark:bg-zinc-900",
];
// Success
const successClass = [
  "text-emerald-600",
  "ring-emerald-600",
  "dark:text-emerald-400",
  "dark:ring-emerald-400",
  "dark:bg-zinc-900",
];
// Warning
const warningClass = [
  "text-amber-600",
  "ring-amber-600",
  "dark:text-amber-400",
  "dark:ring-amber-400",
  "dark:bg-zinc-900",
];
// Danger
const dangerClass = [
  "text-rose-600",
  "ring-rose-600",
  "dark:text-rose-400",
  "dark:ring-rose-400",
  "dark:bg-zinc-900",
];
// Position
const positionXS = ["gap-1"];
const positionSM = ["gap-4"];
// Size
const xs = ["text-[0.6rem]", "size-5", "top-0.5", "right-0"];
const sm = ["text-[0.8rem]", "size-7", "top-1", "right-0"];
---

<span
  class:list={[
    "ring-2",
    "absolute",
    "top-0",
    "right-0",
    "transform",
    "translate-x-1/2",
    "-translate-y-1/2",
    "rounded-full",
    "text-[0.6rem]",
    "flex",
    "bg-white",
    "dark:bg-zinc-900",
    "items-center",
    "justify-center",
    variant === "accent" && accentClass,
    variant === "alternative" && alternativeAccentClass,
    variant === "default" && defaultClass,
    variant === "muted" && mutedClass,
    variant === "text" && textClass,
    variant === "info" && infoClass,
    variant === "success" && successClass,
    variant === "warning" && warningClass,
    variant === "danger" && dangerClass,
    position === "xs" && positionXS,
    position === "sm" && positionSM,
    size === "xs" && xs,
    size === "sm" && sm,
  ]}
  {...rest}
>
  <slot />
</span>
