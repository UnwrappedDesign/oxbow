---
// Fundations
import Text from "@/components/fundations/typography/Text.astro";
import OxbowLink from "@/components/fundations/buttons/OxbowLink.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
// Components
import AlpineTailwind from "@/components/global/AlpineTailwind.astro";

interface Props {
  title: string;
  subtitle?: string; // Make subtitle optional
  highlightText?: string;
  showAlpineTailwind?: boolean; // Optional prop to show AlpineTailwind
  showThemeNavigator?: boolean; // Optional prop to show ThemeNavigator
  textCentered?: boolean; // Optional prop to center text
  additionalText?: string; // Optional prop for additional text
  additionalTextClasses?: string; // Optional classes for additional text
  slot?: any;
  showButton?: boolean; // New optional prop
}

const {
  title,
  subtitle,
  highlightText,
  showAlpineTailwind = true,
  textCentered = false,
  additionalText,
  additionalTextClasses = "",
  showButton = false, // Default to false if not specified
} = Astro.props;
---

<section
  x-data="{ currentPath: window.location.pathname }"
  :class="currentPath === '/' ? ' pt-16 pb-0' : ''"
>
  <Wrapper variant="hero" class="py-12">
    <div class={`flex flex-col  ${textCentered ? "justify-center" : ""}`}>
      {
        showAlpineTailwind && ( // Conditionally render AlpineTailwind
          <div class={`flex ${textCentered ? "justify-center" : ""}`}>
            <AlpineTailwind />
          </div>
        )
      }
      <Text
        tag="h1"
        variant="displayXL"
        class={`text-black tracking-tight xl:text-3xl mt-4   font-semibold  max-w-lg ${textCentered ? "text-center text-balance max-w-3xl  mx-auto" : ""}`}
      >
        {title}
      </Text>
      <div
        class={`flex flex-col ${textCentered ? "text-center text-balance max-w-lg mx-auto " : ""}`}
      >
        {
          subtitle && (
            <Text
              tag="p"
              variant="textBase"
              class={`text-base-500 text-balance font-medium mt-2 max-w-xl ${textCentered ? "text-center text-balance max-w-lg mx-auto" : ""}`}
            >
              {subtitle}
            </Text>
          )
        }
        {
          highlightText && (
            <Text tag="span" variant="textBase">
              {highlightText}
            </Text>
          )
        }
        {
          additionalText && (
            <Text tag="p" variant="textSM" class={`${additionalTextClasses}`}>
              {additionalText}
            </Text>
          )
        }
        {
          showButton && ( // Conditionally render the button
            <div
              class={`flex gap-2 flex-wrap mt-8 ${textCentered ? "justify-center" : ""}`}
            >
              <OxbowLink
                href="/pricing"
                size="base"
                variant="default"
                gap="sm"
                id="access-navigation-cta"
                data-umami-event="access-navigation-cta"
                class="w-full sm:w-auto "
              >
                Get access
                <span>
                  <del class="opacity-45">$149</del> $67
                </span>
              </OxbowLink>
              <OxbowLink
                href="/components"
                size="base"
                variant="muted"
                id="access-navigation-cta"
                data-umami-event="access-navigation-cta"
                class="w-full sm:w-auto"
              >
                Browse components
              </OxbowLink>
            </div>
          )
        }
      </div>
    </div>
  </Wrapper>
</section>
