---
interface Props {
  variant?: "wide" | "prose" | "standard" | "stickyNav"; // Define any variants you need
  class?: string; // Optional prop for additional classes
}
const { variant = "standard", class: extraClass = "" } = Astro.props;
// Map each variant to its specific classes
const variantClasses = {
  narrow: "max-w-xl 2xl:max-w-3xl mx-auto px-8 ",
  //
  prose:
    "prose prose-sm prose-headings:font-medium text-base-500  prose-headings:text-black  prose-blockquote:text-base-500 prose-blockquote:font-normal prose-blockquote:tracking-normal prose-img:border prose-img:border-base-100  prose-img:rounded-xl prose-a:text-black  prose-a:hover:text-accent-400 prose-a:duration-200 prose-hr:border-base-300  prose-pre:border-none prose-pre:rounded-2xl prose-strong:font-medium prose-strong:text-black  prose-code:text-black  max-w-none prose:font-sans  prose-tr:border-base-100 prose-thead:border-base-800darkprose-thead:border-base-800 prose-pre:!bg-base-50",
  //
  wide: "max-w-screen 2xl:max-w-[100rem] mx-auto  px-8 ",
  //
  standard: "max-w-6xl   2xl:max-w-[1400px] mx-auto  px-8 ",
  //
  stickyNav: "max-w-7xl 2xl:max-w-[1400px] mx-auto  px-8",
};
// Combine the classes for the specified variant with any extra classes
const classes = `${variantClasses[variant]} ${extraClass}`.trim();
---

<div class={classes}>
  <slot />
</div>
