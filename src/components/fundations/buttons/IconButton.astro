---
const {
  variant,
  size,
  onlyIconSize,
  gap,
  class: className,
  ...rest
} = Astro.props;
// Accent button
const accentClass = [
  "text-white",
  "bg-accent-600",
  "hover:bg-accent-700",
  "ring-accent-700",
  "focus:ring-accent-700",
  "focus:ring-offset-white",
];
// Default button
const defaultClass = [
  "text-base-500",
  "bg-white",
  "hover:text-accent-500",
  "ring-1",
  "ring-base-100",
  "focus:ring-accent-500",
  "focus:ring-offset-white",
];
// Muted button
const mutedClass = [
  "text-accent-700",
  "bg-accent-50",
  "hover:bg-accent-100",
  "ring-accent-50",
  "focus:ring-accent-500",
  "focus:ring-offset-white",
];
// Text button
const textClass = [
  "text-base-500",
  "bg-white",
  "hover:text-accent-600",
  "hover:bg-base-50",
  "ring-transparent",
  "focus:ring-accent-500",
  "focus:ring-offset-white",
];
// Link button
const linkClass = [
  "text-accent-500",
  "hover:text-accent-700",
  "ring-transparent",
  "focus:ring-accent-500",
  "focus:ring-offset-white",
];
// Size
const xs = ["p-1", "text-xs", "font-medium", "rounded-md"];
const sm = ["p-1.5", "text-sm", "font-medium", "rounded-md"];
const base = ["p-2", "text-base", "font-medium", "rounded-lg"];
const md = ["p-2.5", "text-base", "font-medium", "rounded-lg"];
const lg = ["p-3", "text-base", "font-medium", "rounded-lg"];
const xl = ["p-4", "text-lg", "font-medium", "rounded-lg"];
---
<button
  class:list={[
    "flex",
    "items-center",
    "justify-center",
    "transition-all",
    "duration-300",
    "focus:ring-2",
    "focus:ring-offset-2",
    "focus:outline-none",
    variant === "accent" && accentClass,
    variant === "default" && defaultClass,
    variant === "muted" && mutedClass,
    variant === "text" && textClass,
    variant === "link" && linkClass,
    size === "xs" && xs,
    size === "sm" && sm,
    size === "base" && base,
    size === "md" && md,
    size === "lg" && lg,
    size === "xl" && xl,
    className,
  ]}
  {...rest}>
  <slot name="icon" />
</button>
