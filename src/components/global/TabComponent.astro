---
import { Code } from "astro:components";
const { componentName } = Astro.props;
const componentPath = `/preview/${componentName}`;
const codePath = `/src/pages/components/marketing/left-heroes/${componentName}.astro`;
---

<section
  x-data="{ tab: 'preview' }"
  class="not-prose">
  <!---
// Este height me esta dando mas guerra que un hijo tonto
// La idea es que el preview de la tab se ajuste a la altura del component
// sin hacer scroll como en Tailwind UI.
-->

  <div class="relative h-[80vh]">
    <div class="pointer-events-none inset-x-0 top-0 z-10 md:left-auto">
      <div
        class="flex items-center justify-between rounded-t-[10px] py-2 backdrop-blur-sm md:m-1 md:rounded-lg">
        <div class="hidden md:flex min-w-0">
          <h2 class="truncate text-base font-medium leading-7 text-slate-900">
            <a href="#component-b9bcab4538776a17fff93d18f82a8272"
              >Simple with bottom image</a
            >
          </h2>
        </div>
        <div class="flex items-center">
          <button
            @click="tab = 'preview'"
            :class="tab === 'preview' ? 'bg-black/5' : 'bg-black/0'"
            class="backdrop-blur pointer-events-auto mr-1 flex rounded-md px-4 py-1 text-sm text-black transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50">
            Preview
          </button>
          <button
            @click="tab = 'code'"
            :class="tab === 'code' ? 'bg-black/5' : 'bg-black/0'"
            class="pointer-events-auto flex rounded-md px-4 py-1 text-sm text-black transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50">
            Code
          </button>
          <div class="mx-1 h-4 w-[2px] bg-black/10"></div>
          <button
            id="copyButton"
            class="pointer-events-auto relative flex rounded-md px-4 py-1 text-sm text-black transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50">
            <span class="transition">Copy</span>
            <span
              class="opacity-0 absolute inset-0 flex items-center justify-center transition"
              >Copied!</span
            >
          </button>
        </div>
      </div>
    </div>
    <div
      id="resizeContainer"
      class="relative h-full w-full flex border overflow-hidden rounded-2xl">
      <div
        x-show="tab === 'preview'"
        class="flex-grow h-full">
        <iframe
          src={componentPath}
          class="h-full w-full"
          frameborder="0"
        ></iframe>
      </div>
      <div
        x-show="tab === 'code'"
        class="flex-grow h-full w-full overflow-scroll px-8 py-6 transition">
        <Code
          id="codeBlock"
          code={`codePath`}
          lang="html"
          theme="css-variables"
        />
      </div>
      <div
        id="resizeHandle"
        class="absolute inset-y-0 my-auto h-full z-50 right-0 flex items-center">
        <div class="w-2 bg-blue h-8 cursor-ew-resize"></div>
      </div>
    </div>
  </div>
</section>

<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    const codePath = "/src/pages/components/marketing/left-heroes/1.astro";
    fetch(codePath)
      .then((response) => response.text())
      .then((code) => {
        const startIndex = code.indexOf("<section");
        const endIndex = code.lastIndexOf("</section>") + "</section>".length;
        const componentCode = code.substring(startIndex, endIndex);
        const codeBlock = document.getElementById("codeBlock");
        codeBlock.textContent = componentCode;
      })
      .catch((error) => {
        console.error("Error loading code:", error);
        document.getElementById("codeBlock").textContent =
          "Failed to load code.";
      });

    // Resizing functionality
    const resizeHandle = document.getElementById("resizeHandle");
    const resizeContainer = document.getElementById("resizeContainer");
    let isResizing = false;
    let initialX = 0;
    let initialWidth = 0;

    resizeHandle.addEventListener("mousedown", function (e) {
      isResizing = true;
      initialX = e.clientX;
      initialWidth = resizeContainer.offsetWidth;
      document.body.style.cursor = "ew-resize";
      e.preventDefault();
    });

    document.addEventListener("mousemove", function (e) {
      if (!isResizing) return;
      const dx = e.clientX - initialX;
      resizeContainer.style.width = `${initialWidth + dx}px`;
    });

    document.addEventListener("mouseup", function () {
      isResizing = false;
      document.body.style.cursor = "default";
    });
  });
</script>

<div class="space-y-4">
  <div></div>
  <div></div>
</div>

<!----- Or ------->

<div class="flex flex-col gap-4">
  <div></div>
  <div></div>
</div>
