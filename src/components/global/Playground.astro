---
import { Code } from "astro:components";
import * as prettier from "prettier";
interface Props {
  componentIndex: number;
  componentPath: string;
  playgroundRef: string;
}
const { componentIndex, componentPath, playgroundRef } = Astro.props;
const user = Astro.locals.user;
const canSeeCode = user || componentIndex === 1;
const code = canSeeCode ? await Astro.slots.render("default")
                      : '';
const ppcode = canSeeCode ? await prettier.format(code, {
                          parser: "html",
                        })
                        : '';
---
<section x-data={`{ tab: 'preview', viewportSize: 'desktop' }`} class="not-prose" >
  <div class="relative">
    <div class="pointer-events-none inset-x-0 top-0 z-10 md:left-auto">
      <div class="flex items-center justify-between py-2 gap-1">
        <a
          class="pointer-events-auto rounded-md border bg-base-50 p-1 text-base-500 flex items-center justify-center size-7 text-xs"
          href={`#${componentIndex}`}
        >
        {componentIndex}
        </a>
        <div class="flex items-center justify-end w-full gap-2">
          <span class="isolate md:inline-flex h-7 gap-1 hidden" x-show="tab === 'preview'">
            <button
              class="pointer-events-auto relative inline-flex items-center rounded p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-base-50 "
              @click="viewportSize = 'mobile'" :class="viewportSize === 'mobile' ? 'bg-base-50' : 'bg-black/0'"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-device-mobile size-[20px]"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M6 5a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-14z"
                ></path>
                <path d="M11 4h2"></path>
                <path d="M12 17v.01"></path>
              </svg>
            </button>
            <button
              class="pointer-events-auto relative  inline-flex items-center rounded  p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-base-50 "
              @click="viewportSize = 'tablet'" :class="viewportSize === 'tablet' ? 'bg-base-50' : 'bg-black/0'"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-device-ipad-horizontal size-[22px]"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M3 6a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-12z"
                ></path>
                <path d="M9 17h6"></path>
              </svg>
            </button>
            <button
              class="pointer-events-auto relative  inline-flex items-center rounded p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-base-50 "
              @click="viewportSize = 'desktop'" :class="viewportSize === 'desktop' ? 'bg-base-50' : 'bg-black/0 '"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-device-desktop size-[22px]"
              >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                  d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"
                ></path>
                <path d="M7 20h10"></path>
                <path d="M9 16v4"></path>
                <path d="M15 16v4"></path>
              </svg>
            </button>
          </span>
          <div class="mx-1 h-4 w-[2px] bg-base-50 hidden md:inline-block"></div>
          {
            canSeeCode ? (
              <div class="flex items-center gap-2">
                <button
                  @click="tab = 'preview'" :class="tab === 'preview' ? 'bg-base-50' : 'bg-black/0'"
                  class="backdrop-blur pointer-events-auto flex focus:text-accent-500 rounded-md px-4 h-7 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50">
                  Preview
                </button>
                <button
                  @click="tab = 'code'" :class="tab === 'code' ? 'bg-base-50' : 'bg-black/0'"
                  class="pointer-events-auto flex rounded-md px-4 py-1 focus:text-accent-500 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50">
                  Code
                </button>
                <div class="mx-1 h-4 w-[2px] bg-base-50" />
                <button
                  x-data="{ copied: false }"
                  class="pointer-events-auto relative w-20 flex rounded-md focus:text-accent-500 px-4 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50"
                  @click={`copied=true; $clipboard($refs.code${componentIndex}.innerText); setTimeout(()=> { copied = false; }, 2000);`}
                >
                  <span
                    x-text="copied ? 'Copied!' : 'Copy'"
                    class="transition"
                  />
                </button>
              </div>
            ) : (
              <a
                class="pointer-events-auto relative flex rounded-md px-4 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-black/50"
                href="/pricing"
                data-umami-event="click-get-access"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
              >
                Get Access
              </a>
            )
          }
        </div>
      </div>
    </div>
    <div
      class="relative min-h-[400] w-full flex border  ring-4 ring-base-50 overflow-hidden rounded-lg"
    >
      <div
        x-show="tab === 'preview'"
        class="flex flex-grow w-full justify-center"
      >
        <div
          class="w-full overflow-auto transition-all duration-500 easy-in-out"
          :class="{ 'max-w-sm  border-x': viewportSize === 'mobile', 'max-w-screen-md  border-x': viewportSize === 'tablet','max-w-full': viewportSize === 'desktop' }">
          <iframe  x-intersect.once="$el.src = $el.dataset.src" id={playgroundRef} width="100%" data-src={`/iframe/${componentPath}?iframeId=iframe-${componentIndex}`}/>
        </div>
      </div>
      {
        canSeeCode && (
          <div
            x-show="tab === 'code'"
            x-ref={`code${componentIndex}`}
            class="flex-grow size-full  text-sm overflow-auto p-4 ov bg-base-50 transition selection:bg-[#CEFDFE] selection:text-accent-950"
          >
            <Code code={ppcode} lang="html" theme="css-variables" />
          </div>
        )
      }
    </div>
  </div>
</section>
