---
// Fundations
import Text from "@/components/fundations/typography/Text.astro";
import OxbowLink from "@/components/fundations/buttons/OxbowLink.astro";
import OxbowButton from "@/components/fundations/buttons/OxbowButton.astro";
// Components
import { Code } from "astro:components";
import * as prettier from "prettier";
interface Props {
  componentIndex: number;
  componentPath: string;
  playgroundRef: string;
}
const { componentIndex, componentPath, playgroundRef } = Astro.props;
const user = Astro.locals.user;
const canSeeCode = user || componentIndex === 1;
const code = canSeeCode ? await Astro.slots.render("default")
                      : '';
const ppcode = canSeeCode ? await prettier.format(code, {
                          parser: "html",
                        })
                        : '';
const theme = ``;
---
<section x-data="playground" class="not-prose ">
  <div class="relative"  @theme="setTheme($event.detail.color)">
    <div class="flex items-center justify-between pb-2 gap-1 ">
      <div class="inline-flex items-center p-1.5 gap-1 bg-white rounded-full">
        <a
          class="pointer-events-auto rounded-full outline outline-base-100  bg-white p-0.5 text-base-500 flex items-center justify-center size-7 text-xs"
          href={`#${componentIndex}`}
        >
          {componentIndex}
        </a>
          <div x-data="themeSelector" class="relative z-10 w100">
              <OxbowButton 
                size="mini"
                variant="muted"
                @click="toggleOpen" 
                class="flex items-center text-xs pointer-events-auto gap-2 "
              >
                <div class="flex items-center gap-2">
                    <div 
                        class="rounded-full size-1.5"
                        :class="{['bg-' + selected.toLowerCase() + '-500']: true}"
                    ></div>
                    <span x-text="selected"></span>
                </div>
               
              <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
              </svg>
            </OxbowButton>
            <div 
                x-show="open" 
                x-on:click.away="toggleOpen"
                class="absolute  mt-4 bg-white w-80 rounded-lg shadow outline outline-base-100  z-60 -ml-10"
                x-transition
            >
                <div class="p-4 rounded-lg ">
                  <Text tag="p" variant="textBase" class="font-medium text-black ">Color options</Text>
                  <Text tag="p" variant="textXS" class="mt-1 text-base-500 ">Customize your colors.</Text>
                  <div class="w-full mt-4">
                      <div class="grid grid-cols-3 md:grid-cols-3 gap-2 ">
                        <template x-for="color in colors" class="w-full ">
                          <OxbowButton 
                            size="mini"
                            variant="muted"
                            x-on:click="selectColor(color.name)"
                            :class="selected === color.name ? 'outline-2 !outline-base-500' : ''"
                            class="flex items-center w-full pointer-events-auto"
                          >
                            <div class="flex items-center justify-between w-full gap-2">
                              <span x-text="color.name"></span>
                              <span class="rounded-full size-1.5 shrink-0" :class="color.color"></span>
                            </div>
                          </OxbowButton>
                        </template>
                        
                      </div>
                  </div>
              </div>
            </div>
        </div>
      </div>
      <div class=" hidden md:flex items-center justify-end p-1 gap-1 bg-white rounded-full">
        <span class="hidden isolate md:inline-flex items-center  gap-1 bg-base-50 p-0.5 rounded-full" x-show="tab === 'preview'">
          <button
             class="flex items-center justify-center p-1.5 text-xs bg-white pointer-events-auto rounded-full outline outline-base-100  text-base-500 size-7 focus:text-black"
             @click="viewportSize = 'mobile'" :class="viewportSize === 'mobile' ? 'bg-base-900' : 'bg-black'"
             >
             <svg class=" m-auto" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4 2.5C4 2.22386 4.22386 2 4.5 2H10.5C10.7761 2 11 2.22386 11 2.5V12.5C11 12.7761 10.7761 13 10.5 13H4.5C4.22386 13 4 12.7761 4 12.5V2.5ZM4.5 1C3.67157 1 3 1.67157 3 2.5V12.5C3 13.3284 3.67157 14 4.5 14H10.5C11.3284 14 12 13.3284 12 12.5V2.5C12 1.67157 11.3284 1 10.5 1H4.5ZM6 11.65C5.8067 11.65 5.65 11.8067 5.65 12C5.65 12.1933 5.8067 12.35 6 12.35H9C9.1933 12.35 9.35 12.1933 9.35 12C9.35 11.8067 9.1933 11.65 9 11.65H6Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path>
             </svg>
          </button>
          <button
             class="flex items-center justify-center p-1.5 text-xs bg-white pointer-events-auto rounded-full outline outline-base-100  text-base-500 size-7 focus:text-black"
             @click="viewportSize = 'tablet'" :class="viewportSize === 'tablet' ? '' : '"
             >
             <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="1.5"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-device-ipad-horizontal  mx-auto"
                >
                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                <path
                   d="M3 6a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-12z"
                   ></path>
                <path d="M9 17h6"></path>
             </svg>
          </button>
          <button
             class="flex items-center justify-center p-1.5 text-xs bg-white pointer-events-auto rounded-full outline outline-base-100  text-base-500 size-7 focus:text-black"
             @click="viewportSize = 'desktop'" :class="viewportSize === 'desktop' ? 'bg-base-900' : 'bg-black'"
             >
             <svg class=" m-auto"  viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M1 3.25C1 3.11193 1.11193 3 1.25 3H13.75C13.8881 3 14 3.11193 14 3.25V10.75C14 10.8881 13.8881 11 13.75 11H1.25C1.11193 11 1 10.8881 1 10.75V3.25ZM1.25 2C0.559643 2 0 2.55964 0 3.25V10.75C0 11.4404 0.559644 12 1.25 12H5.07341L4.82991 13.2986C4.76645 13.6371 5.02612 13.95 5.37049 13.95H9.62951C9.97389 13.95 10.2336 13.6371 10.1701 13.2986L9.92659 12H13.75C14.4404 12 15 11.4404 15 10.75V3.25C15 2.55964 14.4404 2 13.75 2H1.25ZM9.01091 12H5.98909L5.79222 13.05H9.20778L9.01091 12Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path>
             </svg>
          </button>
       </span>
       
        {
          canSeeCode ? (
            <div class="flex items-center gap-1 bg-base-50 p-0.5 rounded-full">
              <OxbowButton
               size="mini"
                variant="alternative"
                x-on:click="setTab('preview')" 
                :class="tab === 'preview' ? ' outline-base-100  ' : ''"
                data-umami-event="click-view-preview"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto ">
                Preview
              </OxbowButton>
              <OxbowButton
               size="mini"
                variant="alternative"
                x-on:click="setTab('code')" 
                :class="tab === 'code' ? 'outline-base-100  ' : ''"
                data-umami-event="click-view-code"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto ">
                Code
              </OxbowButton>
             <OxbowButton
                size="mini"
                variant="alternative"
                x-on:click="setTab('theme')" 
                :class="tab === 'theme' ? 'outline-base-100  ' : ''"
                data-umami-event="click-view-theme"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto">
                Theme
              </OxbowButton> 
             
              <OxbowButton
                size="mini"
                variant="alternative"
                data-umami-event="click-copy-component"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="w-20 pointer-events-auto"
                x-on:click="copyCode"
              >
                <span
                  x-text="copied ? 'Copied!' : 'Copy'"
                  class="transition"
                />
              </OxbowButton>
            </div>
          ) : (
            <OxbowLink
            size="mini"
            variant="alternative"
            href="/pricing"
            data-umami-event="click-get-access"
            data-umami-data-id={user?.uid}
            data-umami-event-componentref={componentPath}
            class="pointer-events-auto"
            >
              Get Access
            </OxbowLink>
          )
        }
      </div>
    </div>
  <div
    class="relative min-h-[400] w-full flex  rounded-xl outline-base-100 outline sahdow bg-white z-1 overflow-hidden"
  >
    <div
      x-show="tab === 'preview'"
      class="flex justify-center flex-grow w-full bg-white"
    >
      <div
        class="w-full overflow-auto transition-all duration-500 easy-in-out"
        :class="{ 'max-w-sm  border-x border-base-100': viewportSize === 'mobile', 'max-w-screen-md  border-x border-base-100': viewportSize === 'tablet','max-w-full': viewportSize === 'desktop' }">
        <iframe  x-intersect.once="$el.src = $el.dataset.src" id={playgroundRef} width="100%" data-src={`/iframe/${componentPath}?iframeId=iframe-${componentIndex}`}/>
      </div>
    </div>
    {
      canSeeCode && (
        <div
          x-show="tab === 'code'"
          x-ref="code"
          class="flex-grow p-4 overflow-auto text-xs bg-white size-full  transition selection:bg-base-100"
        >
          <Code code={ppcode} lang="html" theme="css-variables" class="scrollbar-hide"/>
        </div>
        <div
          x-show="tab === 'theme'"
          x-ref="theme"
          class="flex-grow p-4 overflow-auto text-xs bg-white size-full  transition selection:bg-base-100"
        >
          <div x-html="theme" />
        </div>
      )
    }
  </div>
  </div>
</section>
