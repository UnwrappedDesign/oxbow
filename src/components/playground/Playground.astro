---
import Text from "../fundations/typography/Text.astro";
import { Code } from "astro:components";
import * as prettier from "prettier";
interface Props {
  componentIndex: number;
  componentPath: string;
  playgroundRef: string;
}
const { componentIndex, componentPath, playgroundRef } = Astro.props;
const user = Astro.locals.user;
const canSeeCode = user || componentIndex === 1;
const code = canSeeCode ? await Astro.slots.render("default")
                      : '';
const ppcode = canSeeCode ? await prettier.format(code, {
                          parser: "html",
                        })
                        : '';

const theme = ``;

---
<section x-data="playground" class="not-prose ">
  <div class="relative"  @theme="setTheme($event.detail.color)">
   
    <div class="flex items-center justify-between pb-2 gap-1 ">
      <div class="flex items-center gap-2">
        <a
          class="pointer-events-auto rounded-md border border-base-200 bg-white p-1 text-base-500 flex items-center justify-center size-7 text-xs"
          href={`#${componentIndex}`}
        >
          {componentIndex}
        </a>
        <div x-data="themeSelector" class="relative w-100 z-10">
            <button 
                @click="toggleOpen" 
                class="pointer-events-auto focus:text-accent-500 rounded-md px-4 h-7 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200 bg-base-50 flex items-center gap-2 "
            >
                <div class="flex items-center gap-2">
                    <div 
                        class="size-3 rounded-full"
                        :class="{['bg-' + selected.toLowerCase() + '-500']: true}"
                    ></div>
                    <span x-text="selected"></span>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
            </button>
            <div 
                x-show="open" 
                x-on:click.away="toggleOpen"
                class="absolute w-full mt-1 bg-white ring-1 ring-base-900/5 rounded-lg shadow border-base-200 z-50"
                x-transition
            >
              
                <div class="p-4 bg-white rounded-lg max-w-2xl">
                  <Text tag="p" variant="textBase" class=" font-medium ">Color options</Text>
                  <Text tag="p" variant="textXS" class="text-gray-500 mt-1">Customize your colors.</Text>
              
                  <div class="w-full mt-4">
                      <div class="flex flex-wrap gap-3 max-w-sm">
                        <template x-for="color in colors">
                          <button 
                            x-on:click="selectColor(color.name)"
                            :class="selected === color.name ? 'ring-1 ring-base-300' : ''"
                          class="pointer-events-auto flex focus:text-accent-500 rounded-md px-4 h-7 py-1 text-xs text-base-500 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200 bg-base-50 items-center gap-1 "
                          >
                            <div class="size-2 rounded-full" :class="color.color"></div>
                            <span x-text="color.name"></span>
                          </button>
                        </template>
                      </div>
                  </div>
              </div>
            </div>
        </div>
      </div>
      <div class="flex items-center justify-end w-full gap-2">
        <span class="isolate md:inline-flex h-7 gap-1 hidden" x-show="tab === 'preview'">
          <button
            class="pointer-events-auto relative inline-flex items-center rounded p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-white "
            @click="viewportSize = 'mobile'" :class="viewportSize === 'mobile' ? 'bg-base-50' : 'bg-black/0'"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-device-mobile size-[20px]"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path
                d="M6 5a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2v-14z"
              ></path>
              <path d="M11 4h2"></path>
              <path d="M12 17v.01"></path>
            </svg>
          </button>
          <button
            class="pointer-events-auto relative  inline-flex items-center rounded  p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-white "
            @click="viewportSize = 'tablet'" :class="viewportSize === 'tablet' ? 'bg-base-50' : 'bg-black/0'"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-device-ipad-horizontal size-[22px]"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path
                d="M3 6a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-12z"
              ></path>
              <path d="M9 17h6"></path>
            </svg>
          </button>
          <button
            class="pointer-events-auto relative  inline-flex items-center rounded p-1 focus:text-accent-500 text-xs font-semibold text-base-900 hover:bg-white "
            @click="viewportSize = 'desktop'" :class="viewportSize === 'desktop' ? 'bg-base-50' : 'bg-black/0 '"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              class="icon icon-tabler icons-tabler-outline icon-tabler-device-desktop size-[22px]"
            >
              <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
              <path
                d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"
              ></path>
              <path d="M7 20h10"></path>
              <path d="M9 16v4"></path>
              <path d="M15 16v4"></path>
            </svg>
          </button>
        </span>
        <div class="mx-1 h-4 w-[2px] bg-white hidden md:inline-block"></div>
        {
          canSeeCode ? (
            <div class="flex items-center gap-2">
              <button
                x-on:click="setTab('preview')" 
                :class="tab === 'preview' ? 'bg-base-50' : 'bg-black/0'"
                data-umami-event="click-view-preview"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class=" pointer-events-auto flex focus:text-accent-500 rounded-md px-4 h-7 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200 ">
                Preview
              </button>
              <button
                x-on:click="setTab('code')" 
                :class="tab === 'code' ? 'bg-base-50' : 'bg-black/0'"
                data-umami-event="click-view-code"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto flex rounded-md px-4 py-1 focus:text-accent-500 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200">
                Code
              </button>
              <button
                x-on:click="setTab('theme')" 
                :class="tab === 'theme' ? 'bg-base-50' : 'bg-black/0'"
                data-umami-event="click-view-theme"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto flex rounded-md px-4 py-1 focus:text-accent-500 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200">
                Theme
              </button>
              <div class="mx-1 h-4 w-[2px] bg-white" />
              <button
                data-umami-event="click-copy-component"
                data-umami-data-id={user?.uid}
                data-umami-event-componentref={componentPath}
                class="pointer-events-auto relative w-20 flex rounded-md focus:text-accent-500 px-4 py-1 text-sm text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200"
                x-on:click="copyCode"
              >
                <span
                  x-text="copied ? 'Copied!' : 'Copy'"
                  class="transition"
                />
              </button>
            </div>
          ) : (
            <a
              class="pointer-events-auto relative font-medium flex rounded-md px-4 py-1 text-sm focus:text-base-900 transition focus-visible:outline-none focus-visible:ring focus-visible:ring-base-200 text-accent-600  duration-300"
              href="/pricing"
              data-umami-event="click-get-access"
              data-umami-data-id={user?.uid}
              data-umami-event-componentref={componentPath}
            >
              Get Access
            </a>
          )
        }
      </div>
    </div>
    <div
    class="relative min-h-[400] w-full flex border border-gray-200   bg-white overflow-hidden rounded-lg z-1"
  >
    <div
      x-show="tab === 'preview'"
      class="flex flex-grow w-full justify-center"
    >
      <div
        class="w-full overflow-auto transition-all duration-500 easy-in-out"
        :class="{ 'max-w-sm  border-x border-base-200': viewportSize === 'mobile', 'max-w-screen-md  border-x border-base-200': viewportSize === 'tablet','max-w-full': viewportSize === 'desktop' }">
        <iframe  x-intersect.once="$el.src = $el.dataset.src" id={playgroundRef} width="100%" data-src={`/iframe/${componentPath}?iframeId=iframe-${componentIndex}`}/>
      </div>
    </div>
    {
      canSeeCode && (
        <div
          x-show="tab === 'code'"
          x-ref="code"
          class="flex-grow size-full  text-sm overflow-auto p-4 ov bg-white transition selection:bg-[#CEFDFE] selection:text-base-950"
        >
          <Code code={ppcode} lang="html" theme="css-variables" />
        </div>
        <div
          x-show="tab === 'theme'"
          x-ref="theme"
          class="flex-grow size-full  text-sm overflow-auto p-4 ov bg-white transition selection:bg-[#CEFDFE] selection:text-base-950"
        >
          <div x-html="theme" />
        </div>
      )
    }
  </div>
  </div>

</section>
