---
// Props
interface Props {
  componentIndex: number;
  componentPath: string;
  code: string;
}
const { componentIndex, componentPath, code } = Astro.props;
import Download from "@/components/fundations/icons/Download.astro";
import Button from "@/components/fundations/buttons/Button.astro";
---

<Button
  onlyIconSize="xxs"
  variant="outline"
  type="button"
  class="download-btn shadow-zinc-500/50"
  data-download-index={componentIndex}
  data-download-path={componentPath}
  data-download-code-id={`download-code-${componentIndex}`}
  title="Download code"
  aria-label="Download code"
>
  <Download slot="left-icon" size="sm" />
</Button>
<pre
  id={`download-code-${componentIndex}`}
  class="download-code"
  data-download-index={componentIndex}
  style="display:none">{code}</pre>
<script is:inline>
  // Attach a single delegated event listener for all download buttons (robust for Astro)
  if (!window.__oxbowDownloadHandler) {
    document.addEventListener("click", function (e) {
      const btn = e.target.closest(".download-btn");
      if (!btn) return;
      const idx = btn.getAttribute("data-download-index");
      const codeEl = document.querySelector(
        '.download-code[data-download-index="' + idx + '"]'
      );
      if (!codeEl) return;
      var content = codeEl.textContent;
      if (!content) return;
      var path = btn.getAttribute("data-download-path");
      var blob = new Blob([content], { type: "text/html" });
      var url = URL.createObjectURL(blob);
      var a = document.createElement("a");
      a.href = url;
      a.download =
        (path.split("/").pop().replace(".astro", "") || "component") + ".html";
      document.body.appendChild(a);
      a.click();
      setTimeout(function () {
        URL.revokeObjectURL(url);
        a.remove();
      }, 100);
    });
    window.__oxbowDownloadHandler = true;
  }
</script>
