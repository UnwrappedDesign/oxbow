---
import { getAuth } from "firebase-admin/auth";
import BaseHead from "@/components/BaseHead.astro";
import Navigation from "@/components/global/Navigation.astro";
import Footer from "@/components/global/Footer.astro";
import NinjaScript from "@/components/commandBar/NinjaScript.astro";

import { app } from "@/firebase/server";

const auth = getAuth(app);
const uid = Astro.locals.user?.uid;
const customToken = uid ? await auth.createCustomToken(uid) : null;
const siteUrl = (Astro.site && Astro.site.toString()) || "https://oxbowui.com";
const canonicalUrl = new URL(Astro.url.pathname, Astro.site ?? siteUrl).toString();
const privatePaths = [
  /^\/404$/,
  /^\/login(\b|\/)/,
  /^\/login-password(\b|\/)/,
  /^\/email-signin(\b|\/)/,
  /^\/thankyou(\b|\/)/,
  /^\/webhooks\//,
  /^\/api\//,
  /^\/iframe\//,
];
const defaultNoindex = privatePaths.some((rx) => rx.test(Astro.url.pathname));

// Optional per-page SEO overrides
interface HeadOverrides {
  title?: string;
  description?: string;
  image?: string;
  noindex?: boolean;
  structuredData?: any | any[];
}
const { title, description, image, noindex, structuredData }: HeadOverrides = (Astro.props ?? {}) as HeadOverrides;
---

<html lang="en" class="scroll-smooth">
  <head>
    <BaseHead
      pathname={Astro.url.pathname}
      canonicalUrl={canonicalUrl}
      siteUrl={siteUrl}
      title={title}
      description={description}
      image={image}
      noindex={noindex ?? defaultNoindex}
      structuredData={structuredData}
    />
  </head>
  <body class="bg-base-100">
    <Navigation />
    <main class="grow z-1">
      <slot />
    </main>
    <Footer />

    <ninja-keys
      id="ninja"
      class="light"
      selectHotkey="enter"
      placeholder="Search for anything..."
    >
      <slot name="footer" />
    </ninja-keys>
    <NinjaScript />

    <astro-firebase data-customtoken={customToken}></astro-firebase>

    <script>
      import {
        inMemoryPersistence,
        signInWithCustomToken,
      } from "firebase/auth";
      import { auth } from "@/firebase/client";

      import * as amplitude from "@amplitude/analytics-browser";

      class AstroFirebase extends HTMLElement {
        constructor() {
          super();
          const customToken = this.dataset.customtoken;

          if (customToken) {
            auth.setPersistence(inMemoryPersistence);

            signInWithCustomToken(auth, customToken)
              .then((credentials) => {
                window.umami?.track("login", {
                  id: credentials.user.uid,
                });
                window.umami?.identify({
                  id: credentials.user.uid,
                });

                amplitude.setUserId(credentials.user.uid);
                console.log("Successfully signed in with custom token");
              })
              .catch((error) => {
                console.error("Error signing in with custom token", error);
              });
          }
        }
      }
      customElements.define("astro-firebase", AstroFirebase);
    </script>
  </body>
</html>
